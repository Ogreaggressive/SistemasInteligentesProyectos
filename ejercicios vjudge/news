#Nicolas Cari Rodriguez

import sys
from collections import deque

input = sys.stdin.buffer.readline

def boom(first_employee, employee_friends, employee_number):
    friends_per_day = [0] * (employee_number)
    queue = deque([(first_employee, 0)])
    visited = set([first_employee]) 
    while queue:
        employee, day = queue.popleft()
        for friend in employee_friends[employee]:
            if friend not in visited:
                visited.add(friend)
                queue.append((friend, day + 1))
                friends_per_day[day] += 1
    max_friends = max(friends_per_day)

    if max_friends == 0:
        return 0

    max_day = 0
    for day in range (len(friends_per_day)):
        if (friends_per_day[day] == max_friends):
            max_day = day
            break
 

    return str(max_friends) + ' ' + str(max_day+1)


employee_friends = []
employees = int(input())
for _ in range(employees):
    n, *people = list(map(int, input().split()))
    employee_friends.append(people)


start_employee = int(input())
for _ in range(start_employee):
   print(boom(int(input()), employee_friends, employees))